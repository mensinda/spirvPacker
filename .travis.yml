language: cpp
sudo:     false

addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
      - llvm-toolchain-trusty-5.0
    packages:
      - clang-format-5.0
      - clang-5.0
      - g++-7
      - lcov

cache:
  directories: ["$HOME/cmakeTar"]

matrix:
  include:
    - os: linux
      compiler: gcc
      env: COMPILER='g++-7' COVERAGE=ON

before_install:
  - CM_V_MAJOR=3
  - CM_V_MINOR=9
  - CM_V_PATCH=6
  - CMAKE_BASE_NAME="cmake-${CM_V_MAJOR}.${CM_V_MINOR}.${CM_V_PATCH}-Linux-x86_64"
  - CMAKE_DOWNLOAD_LINK="https://cmake.org/files/v${CM_V_MAJOR}.${CM_V_MINOR}/${CMAKE_BASE_NAME}.tar.gz"

install:
  - if [ ! -d "$HOME/cmakeTar" ]; then mkdir "$HOME/cmakeTar"; fi
  - cd "$HOME/cmakeTar"
  - if [ ! -e "${CMAKE_BASE_NAME}.tar.gz" ]; then wget "$CMAKE_DOWNLOAD_LINK"; fi
  - tar -xf "${CMAKE_BASE_NAME}.tar.gz" -C "$HOME"
  - CMAKE_EXE="$HOME/${CMAKE_BASE_NAME}/bin/cmake"
  - if [[ "$COVERAGE" == "ON" ]]; then gem install coveralls-lcov; fi

script:
  - cd ${TRAVIS_BUILD_DIR}
  - CLANG_FORMAT_CMD=clang-format-5.0 ./checkFormat.sh
  - mkdir build
  - cd build
  - ${CMAKE_EXE} -DCMAKE_CXX_COMPILER="${COMPILER}" -DENABLE_CODE_COVERAGE=$COVERAGE ..
  - make
  - ./bin/tests

after_success:
  - if [[ "$COVERAGE" == "ON" ]]; then lcov --directory . --capture --output-file coverage.info;                                                    fi
  - if [[ "$COVERAGE" == "ON" ]]; then lcov --remove coverage.info "/usr/*" "*/external/*" "*/SPVEnum2Str*" "*/test/*" --output-file coverage.info; fi
  - if [[ "$COVERAGE" == "ON" ]]; then lcov --list coverage.info;                                                                                   fi
  - if [[ "$COVERAGE" == "ON" ]]; then coveralls-lcov --source-encoding=ISO-8859-1 coverage.info;                                                   fi
