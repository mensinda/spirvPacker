language: cpp
sudo: false

my_sources: &allSources
  - ubuntu-toolchain-r-test
  - llvm-toolchain-trusty-5.0

cache:
  directories: ["$HOME/cmakeTar"]

matrix:
  include:

    # Code coverage
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: *allSources
          packages: ['clang-format-5.0', 'g++-7', 'lcov']
      env: COMPILER='g++-7' LIBCXX=OFF COVERAGE=ON


    # Clang
    - os: linux
      compiler: clang
      addons:
        apt:
          sources: *allSources
          packages: ['clang-format-5.0', 'clang-5.0', 'libc++-dev']
      env: COMPILER='clang++-5.0' LIBCXX=ON COVERAGE=OFF

    # GCC
    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: *allSources
          packages: ['clang-format-5.0', 'g++-7', 'libc++-dev']
      env: COMPILER='g++-7' LIBCXX=ON COVERAGE=OFF

    - os: linux
      compiler: gcc
      addons:
        apt:
          sources: *allSources
          packages: ['clang-format-5.0', 'g++-7']
      env: COMPILER='g++-7' LIBCXX=OFF  COVERAGE=OFF

before_install:
  - CM_V_MAJOR=3
  - CM_V_MINOR=9
  - CM_V_PATCH=6
  - CMAKE_BASE_NAME="cmake-${CM_V_MAJOR}.${CM_V_MINOR}.${CM_V_PATCH}-Linux-x86_64"
  - CMAKE_DOWNLOAD_LINK="https://cmake.org/files/v${CM_V_MAJOR}.${CM_V_MINOR}/${CMAKE_BASE_NAME}.tar.gz"

install:
  - if [ ! -d "$HOME/cmakeTar" ]; then mkdir "$HOME/cmakeTar"; fi
  - cd "$HOME/cmakeTar"
  - if [ ! -e "${CMAKE_BASE_NAME}.tar.gz" ]; then wget "$CMAKE_DOWNLOAD_LINK"; fi
  - tar -xf "${CMAKE_BASE_NAME}.tar.gz" -C "$HOME"
  - CMAKE_EXE="$HOME/${CMAKE_BASE_NAME}/bin/cmake"

script:
  - cd ${TRAVIS_BUILD_DIR}
  - CLANG_FORMAT_CMD=clang-format-5.0 ./checkFormat.sh
  - mkdir build
  - cd build
  - ${CMAKE_EXE} -DCMAKE_CXX_COMPILER="${COMPILER}" -DUSE_LIBCXX=$LIBCXX -DENABLE_CODE_COVERAGE=$COVERAGE ..
  - make
  - ./bin/tests
